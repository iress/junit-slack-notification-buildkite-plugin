#!/bin/bash
# Add excecuting permission to run
# git update-index --chmod=+x hooks/command

TOKEN_ENV_NAME="${BUILDKITE_PLUGIN_JUNIT_SLACK_NOTIFICATION_SLACK_TOKEN_ENV_NAME:-SLACK_TOKEN}"
TOKEN_VALUE=$(eval "echo \${$TOKEN_ENV_NAME:-}")

if [[ -z "${TOKEN_VALUE}" ]]; then
  echo "Missing $SLACK_TOKEN_ENV_NAME environment variable... looking for alternative"
  TOKEN_VALUE="${BUILDKITE_PLUGIN_JUNIT_SLACK_NOTIFICATION_SLACK_TOKEN}"
fi

export TOKEN_VALUE
if [[ -z "${TOKEN_VALUE}" ]]; then
  echo "Missing Slack token: either use \$SLACK_TOKEN or \$SLACK_TOKEN_ENV_NAME to set environment variable"
  exit 1
fi

PLUGIN_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)/.."

echo "--- :junit: Download the junits XML"

ARTIFACTS_DIR="$(pwd)/$(mktemp -d "junits-slack-notification-plugin-artifacts-tmp.XXXXXXXXXX")"
export ARTIFACTS_DIR

function cleanup {
  rm -rf "${ARTIFACTS_DIR}"
}

trap cleanup EXIT

echo "$PLUGIN_DIR"
cd "$PLUGIN_DIR"

# Allows files download to fail (FATAL  Failed to download artifacts: No artifacts found for downloading)
# and send "No tests data generated!" message to slack in this scenario
buildkite-agent artifact download \
  "${BUILDKITE_PLUGIN_JUNIT_SLACK_NOTIFICATION_ARTIFACTS}" \
  "$ARTIFACTS_DIR"

set -euo pipefail
echo "--- Compile Typescript"
make build

echo "--- Send message to ${BUILDKITE_PLUGIN_JUNIT_SLACK_NOTIFICATION_SLACK_CHANNEL}"
make run
