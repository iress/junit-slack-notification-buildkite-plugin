#!/bin/bash
# Add excecuting permission to run
# git update-index --chmod=+x hooks/command

if [ -z "$DIR" ]
then
  DIR="$(pwd)/hooks"
fi

# shellcheck source=lib/shared.bash
. "$DIR/../lib/shared.bash"

TOKEN_ENV_NAME="$(plugin_read_config SLACK_TOKEN_ENV_NAME "SLACK_TOKEN")"

TOKEN_VALUE=$(eval "echo \${$TOKEN_ENV_NAME:-}")

if [[ -z "${TOKEN_VALUE}" ]]; then
  echo "Missing \$SLACK_TOKEN_ENV_NAME environment variable... looking for alternative"
  TOKEN_VALUE="$(plugin_read_config SLACK_TOKEN "")"
fi

export TOKEN_VALUE
if [[ -z "${TOKEN_VALUE}" ]]; then
  echo "Missing Slack token: either use \$SLACK_TOKEN or \$SLACK_TOKEN_ENV_NAME to set environment variable"
  exit 1
fi

PLUGIN_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)/.."


ARTIFACTS_DIR="$(pwd)/$(mktemp -d "junits-slack-notification-plugin-artifacts-tmp.XXXXXXXXXX")"
export ARTIFACTS_DIR

function cleanup {
  rm -rf "${ARTIFACTS_DIR}"
}

trap cleanup EXIT

cd "$PLUGIN_DIR"

# Dispatch to the command file
if [[ -n "$(plugin_read_list TEST_SUITES)" ]] ; then
  echo "--- :junit: Download each junits XML from the Test suites"
  # TODO: download each artifacts in the test_suites list
else
  echo "--- :junit: Download the junits XML"
  # Allows files download to fail (FATAL  Failed to download artifacts: No artifacts found for downloading)
  # and send "No tests data generated!" message to slack in this scenario
  buildkite-agent artifact download \
    "$(plugin_read_config ARTIFACTS "**\*.xml")" \
    "$ARTIFACTS_DIR"
fi

set -euo pipefail

echo "--- Send message to $(plugin_read_config SLACK_CHANNEL "???")"
make run
